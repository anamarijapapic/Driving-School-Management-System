@page
@using DSMS.Core.Enums;
@model DSMS.Frontend.Pages.Vehicles.IndexModel
@{
    ViewData["Title"] = "Vehicles | Index";

    var keyword = ViewData["Keyword"] as string;
    var currentFilter = ViewData["CurrentFilter"] as string;
    var previous = Model.Vehicles.HasPreviousPage ? ""  : "disabled";
    var next = Model.Vehicles.HasNextPage ? "" : "disabled";
}

<h1>@ViewData["Title"]</h1>

<form asp-action="OnGetAsync" method="get">
    <div class="row">
        <div class="input-group">
            <input type="search" class="form-control" placeholder="Search..." 
                name="searchString" value="@keyword"
            >
            <select class="form-select" name="currentFilter">
                <option value="">All categories</option>
                @foreach (var category in Enum.GetNames(typeof(Category)))
                {
                    <option value="@category" selected="@(category == currentFilter)">@category</option>
                }
            </select>
            <button type="submit" class="btn btn-primary mr-2"><i class="bi bi-search"></i></button>
            <a asp-action="" class="btn btn-secondary clear-btn">Clear</a>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <a class="btn btn-success my-3" asp-area="" asp-page="/Vehicles/Create">
                <i class="bi bi-plus-lg"></i>
                Create New
            </a>
        </div>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-striped">
        <thead>
            <tr>
                @*<th scope="col">#</th>*@
                <th scope="col">Photo</th>
                <th scope="col">Description</th>
                <th scope="col">Category</th>
                <th scope="col">Instructor</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var vehicle in Model.Vehicles)
            {
                <tr>
                    @*<td class="align-middle">@vehicle.Id</td>*@
                    <td class="align-middle">
                        @if (@vehicle.Photo != null)
                        {
                            <img class="img-thumbnail"
                                 src="data:image/*;base64,@(Convert.ToBase64String(@vehicle.Photo))">
                        }
                    </td>
                    <td class="align-middle">@vehicle.Description</td>
                    <td class="align-middle">@vehicle.Category</td>
                    <td class="align-middle">
                        @if (vehicle.Instructor != null)
                        {
                            @if (@vehicle.Instructor?.Photo != null)
                            {
                                <img style="width:30px; height:30px;" class="rounded-circle"
                                     src="data:image/*;base64,@(Convert.ToBase64String(@vehicle.Instructor.Photo))">
                            }
                            <p>@vehicle.Instructor?.FirstName @vehicle.Instructor?.LastName (@vehicle.Instructor?.Email)</p>
                        }
                        else
                        {
                            <span class="text-muted">No instructor assigned.</span>
                        }
                    </td>
                    <td class="align-middle">
                        <a asp-page="/Vehicles/Edit" asp-route-id="@vehicle.Id" class="btn btn-warning">
                            <i class="bi bi-pen"></i>
                            Edit
                        </a>
                        <a asp-page="/Vehicles/Delete" asp-route-id="@vehicle.Id" class="btn btn-danger">
                            <i class="bi bi-trash3"></i>
                            Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div>
    <ul class="pagination">
        <li class="page-item">
            <a asp-page="./Index"
                asp-route-pageIndex="@(Model.Vehicles.PageIndex - 1)"
                asp-route-currentFilter="@ViewData["CurrentFilter"]"
                class="page-link btn @previous"
                role="button">
                Previous
            </a>
        </li>
        @for (var i = 1; i <= Model.Vehicles.TotalPages; i++)
        {
            <li class="page-item @(i == Model.Vehicles.PageIndex ? "active" : "")">
                <a asp-page="./Index"
                    asp-route-pageIndex="@i"
                    asp-route-currentFilter="@ViewData["CurrentFilter"]"
                    class="page-link">
                    @i
                </a>
            </li>
        }
        <li class="page-item">
            <a asp-page="./Index"
                asp-route-pageIndex="@(Model.Vehicles.PageIndex + 1)"
                asp-route-currentFilter="@ViewData["CurrentFilter"]" 
                class="page-link btn @next"
                role="button">
                Next
            </a>
        </li>
    </ul>
</div>
