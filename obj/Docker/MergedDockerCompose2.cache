name: dockercompose7073599279656590033
services:
  n-tier.api:
    build:
      context: /Users/nikolaoccid/dev/Driving-School-Management-System
      dockerfile: src/DSMS.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: DSMS.API
      target: base
    container_name: DSMS.API
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      CONNECTION_STRING: Host=postgres;Port=5432;Database=postgres;Username=admin;Password=root;Integrated
        Security=true;Pooling=true;
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: ntierapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/DSMS.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: /Users/nikolaoccid/dev/Driving-School-Management-System/src/DSMS.API
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: /Users/nikolaoccid/vsdbg/vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: /ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: /Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: /Users/nikolaoccid/.nuget/packages/
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: /Users/nikolaoccid/dev/Driving-School-Management-System
      target: /src
      bind:
        create_host_path: true
  pgadmin4:
    depends_on:
      postgres:
        condition: service_started
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: admin
    image: dcagatay/pwless-pgadmin4:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "15432"
      protocol: tcp
    restart: unless-stopped
  postgres:
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_USER: admin
    image: postgres:alpine
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: "5432"
      protocol: tcp
    restart: unless-stopped
    volumes:
    - type: volume
      source: postgres-data
      target: /var/lib/postgresql/data
      volume: {}
networks:
  default:
    name: dockercompose7073599279656590033_default
volumes:
  postgres-data:
    name: dockercompose7073599279656590033_postgres-data